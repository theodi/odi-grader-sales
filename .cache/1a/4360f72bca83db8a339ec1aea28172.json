{"id":"node_modules/ajv/dist/runtime/parseJson.js","dependencies":[{"name":"/Users/lucyknight/odi-grader-sales/node_modules/ajv/dist/runtime/parseJson.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/lucyknight/odi-grader-sales/node_modules/ajv/lib/runtime/parseJson.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/lucyknight/odi-grader-sales/package.json","includedInParent":true,"mtime":1649847102319},{"name":"/Users/lucyknight/odi-grader-sales/node_modules/ajv/package.json","includedInParent":true,"mtime":1648635397345}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseJsonString = exports.parseJsonNumber = exports.parseJson = void 0;\nconst rxParseJson = /position\\s(\\d+)$/;\nfunction parseJson(s, pos) {\n    let endPos;\n    parseJson.message = undefined;\n    let matches;\n    if (pos)\n        s = s.slice(pos);\n    try {\n        parseJson.position = pos + s.length;\n        return JSON.parse(s);\n    }\n    catch (e) {\n        matches = rxParseJson.exec(e.message);\n        if (!matches) {\n            parseJson.message = \"unexpected end\";\n            return undefined;\n        }\n        endPos = +matches[1];\n        const c = s[endPos];\n        s = s.slice(0, endPos);\n        parseJson.position = pos + endPos;\n        try {\n            return JSON.parse(s);\n        }\n        catch (e1) {\n            parseJson.message = `unexpected token ${c}`;\n            return undefined;\n        }\n    }\n}\nexports.parseJson = parseJson;\nparseJson.message = undefined;\nparseJson.position = 0;\nparseJson.code = 'require(\"ajv/dist/runtime/parseJson\").parseJson';\nfunction parseJsonNumber(s, pos, maxDigits) {\n    let numStr = \"\";\n    let c;\n    parseJsonNumber.message = undefined;\n    if (s[pos] === \"-\") {\n        numStr += \"-\";\n        pos++;\n    }\n    if (s[pos] === \"0\") {\n        numStr += \"0\";\n        pos++;\n    }\n    else {\n        if (!parseDigits(maxDigits)) {\n            errorMessage();\n            return undefined;\n        }\n    }\n    if (maxDigits) {\n        parseJsonNumber.position = pos;\n        return +numStr;\n    }\n    if (s[pos] === \".\") {\n        numStr += \".\";\n        pos++;\n        if (!parseDigits()) {\n            errorMessage();\n            return undefined;\n        }\n    }\n    if (((c = s[pos]), c === \"e\" || c === \"E\")) {\n        numStr += \"e\";\n        pos++;\n        if (((c = s[pos]), c === \"+\" || c === \"-\")) {\n            numStr += c;\n            pos++;\n        }\n        if (!parseDigits()) {\n            errorMessage();\n            return undefined;\n        }\n    }\n    parseJsonNumber.position = pos;\n    return +numStr;\n    function parseDigits(maxLen) {\n        let digit = false;\n        while (((c = s[pos]), c >= \"0\" && c <= \"9\" && (maxLen === undefined || maxLen-- > 0))) {\n            digit = true;\n            numStr += c;\n            pos++;\n        }\n        return digit;\n    }\n    function errorMessage() {\n        parseJsonNumber.position = pos;\n        parseJsonNumber.message = pos < s.length ? `unexpected token ${s[pos]}` : \"unexpected end\";\n    }\n}\nexports.parseJsonNumber = parseJsonNumber;\nparseJsonNumber.message = undefined;\nparseJsonNumber.position = 0;\nparseJsonNumber.code = 'require(\"ajv/dist/runtime/parseJson\").parseJsonNumber';\nconst escapedChars = {\n    b: \"\\b\",\n    f: \"\\f\",\n    n: \"\\n\",\n    r: \"\\r\",\n    t: \"\\t\",\n    '\"': '\"',\n    \"/\": \"/\",\n    \"\\\\\": \"\\\\\",\n};\nconst CODE_A = \"a\".charCodeAt(0);\nconst CODE_0 = \"0\".charCodeAt(0);\nfunction parseJsonString(s, pos) {\n    let str = \"\";\n    let c;\n    parseJsonString.message = undefined;\n    // eslint-disable-next-line no-constant-condition, @typescript-eslint/no-unnecessary-condition\n    while (true) {\n        c = s[pos++];\n        if (c === '\"')\n            break;\n        if (c === \"\\\\\") {\n            c = s[pos];\n            if (c in escapedChars) {\n                str += escapedChars[c];\n                pos++;\n            }\n            else if (c === \"u\") {\n                pos++;\n                let count = 4;\n                let code = 0;\n                while (count--) {\n                    code <<= 4;\n                    c = s[pos];\n                    if (c === undefined) {\n                        errorMessage(\"unexpected end\");\n                        return undefined;\n                    }\n                    c = c.toLowerCase();\n                    if (c >= \"a\" && c <= \"f\") {\n                        code += c.charCodeAt(0) - CODE_A + 10;\n                    }\n                    else if (c >= \"0\" && c <= \"9\") {\n                        code += c.charCodeAt(0) - CODE_0;\n                    }\n                    else {\n                        errorMessage(`unexpected token ${c}`);\n                        return undefined;\n                    }\n                    pos++;\n                }\n                str += String.fromCharCode(code);\n            }\n            else {\n                errorMessage(`unexpected token ${c}`);\n                return undefined;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        }\n        else if (c === undefined) {\n            errorMessage(\"unexpected end\");\n            return undefined;\n        }\n        else {\n            if (c.charCodeAt(0) >= 0x20) {\n                str += c;\n            }\n            else {\n                errorMessage(`unexpected token ${c}`);\n                return undefined;\n            }\n        }\n    }\n    parseJsonString.position = pos;\n    return str;\n    function errorMessage(msg) {\n        parseJsonString.position = pos;\n        parseJsonString.message = msg;\n    }\n}\nexports.parseJsonString = parseJsonString;\nparseJsonString.message = undefined;\nparseJsonString.position = 0;\nparseJsonString.code = 'require(\"ajv/dist/runtime/parseJson\").parseJsonString';\n"},"sourceMaps":{"js":{"version":3,"file":"parseJson.js","sourceRoot":"","sources":["../../lib/runtime/parseJson.ts"],"names":[],"mappings":"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","sourcesContent":["const rxParseJson = /position\\s(\\d+)$/\n\nexport function parseJson(s: string, pos: number): unknown {\n  let endPos: number | undefined\n  parseJson.message = undefined\n  let matches: RegExpExecArray | null\n  if (pos) s = s.slice(pos)\n  try {\n    parseJson.position = pos + s.length\n    return JSON.parse(s)\n  } catch (e) {\n    matches = rxParseJson.exec((e as Error).message)\n    if (!matches) {\n      parseJson.message = \"unexpected end\"\n      return undefined\n    }\n    endPos = +matches[1]\n    const c = s[endPos]\n    s = s.slice(0, endPos)\n    parseJson.position = pos + endPos\n    try {\n      return JSON.parse(s)\n    } catch (e1) {\n      parseJson.message = `unexpected token ${c}`\n      return undefined\n    }\n  }\n}\n\nparseJson.message = undefined as string | undefined\nparseJson.position = 0 as number\nparseJson.code = 'require(\"ajv/dist/runtime/parseJson\").parseJson'\n\nexport function parseJsonNumber(s: string, pos: number, maxDigits?: number): number | undefined {\n  let numStr = \"\"\n  let c: string\n  parseJsonNumber.message = undefined\n  if (s[pos] === \"-\") {\n    numStr += \"-\"\n    pos++\n  }\n  if (s[pos] === \"0\") {\n    numStr += \"0\"\n    pos++\n  } else {\n    if (!parseDigits(maxDigits)) {\n      errorMessage()\n      return undefined\n    }\n  }\n  if (maxDigits) {\n    parseJsonNumber.position = pos\n    return +numStr\n  }\n  if (s[pos] === \".\") {\n    numStr += \".\"\n    pos++\n    if (!parseDigits()) {\n      errorMessage()\n      return undefined\n    }\n  }\n  if (((c = s[pos]), c === \"e\" || c === \"E\")) {\n    numStr += \"e\"\n    pos++\n    if (((c = s[pos]), c === \"+\" || c === \"-\")) {\n      numStr += c\n      pos++\n    }\n    if (!parseDigits()) {\n      errorMessage()\n      return undefined\n    }\n  }\n  parseJsonNumber.position = pos\n  return +numStr\n\n  function parseDigits(maxLen?: number): boolean {\n    let digit = false\n    while (((c = s[pos]), c >= \"0\" && c <= \"9\" && (maxLen === undefined || maxLen-- > 0))) {\n      digit = true\n      numStr += c\n      pos++\n    }\n    return digit\n  }\n\n  function errorMessage(): void {\n    parseJsonNumber.position = pos\n    parseJsonNumber.message = pos < s.length ? `unexpected token ${s[pos]}` : \"unexpected end\"\n  }\n}\n\nparseJsonNumber.message = undefined as string | undefined\nparseJsonNumber.position = 0 as number\nparseJsonNumber.code = 'require(\"ajv/dist/runtime/parseJson\").parseJsonNumber'\n\nconst escapedChars: {[X in string]?: string} = {\n  b: \"\\b\",\n  f: \"\\f\",\n  n: \"\\n\",\n  r: \"\\r\",\n  t: \"\\t\",\n  '\"': '\"',\n  \"/\": \"/\",\n  \"\\\\\": \"\\\\\",\n}\n\nconst CODE_A: number = \"a\".charCodeAt(0)\nconst CODE_0: number = \"0\".charCodeAt(0)\n\nexport function parseJsonString(s: string, pos: number): string | undefined {\n  let str = \"\"\n  let c: string | undefined\n  parseJsonString.message = undefined\n  // eslint-disable-next-line no-constant-condition, @typescript-eslint/no-unnecessary-condition\n  while (true) {\n    c = s[pos++]\n    if (c === '\"') break\n    if (c === \"\\\\\") {\n      c = s[pos]\n      if (c in escapedChars) {\n        str += escapedChars[c]\n        pos++\n      } else if (c === \"u\") {\n        pos++\n        let count = 4\n        let code = 0\n        while (count--) {\n          code <<= 4\n          c = s[pos]\n          if (c === undefined) {\n            errorMessage(\"unexpected end\")\n            return undefined\n          }\n          c = c.toLowerCase()\n          if (c >= \"a\" && c <= \"f\") {\n            code += c.charCodeAt(0) - CODE_A + 10\n          } else if (c >= \"0\" && c <= \"9\") {\n            code += c.charCodeAt(0) - CODE_0\n          } else {\n            errorMessage(`unexpected token ${c}`)\n            return undefined\n          }\n          pos++\n        }\n        str += String.fromCharCode(code)\n      } else {\n        errorMessage(`unexpected token ${c}`)\n        return undefined\n      }\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    } else if (c === undefined) {\n      errorMessage(\"unexpected end\")\n      return undefined\n    } else {\n      if (c.charCodeAt(0) >= 0x20) {\n        str += c\n      } else {\n        errorMessage(`unexpected token ${c}`)\n        return undefined\n      }\n    }\n  }\n  parseJsonString.position = pos\n  return str\n\n  function errorMessage(msg: string): void {\n    parseJsonString.position = pos\n    parseJsonString.message = msg\n  }\n}\n\nparseJsonString.message = undefined as string | undefined\nparseJsonString.position = 0 as number\nparseJsonString.code = 'require(\"ajv/dist/runtime/parseJson\").parseJsonString'\n"]}},"error":null,"hash":"0a7cc38b913ea82fdd6cdb8ba51729cf","cacheData":{"env":{}}}