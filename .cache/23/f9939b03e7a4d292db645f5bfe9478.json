{"id":"node_modules/similarity/index.js","dependencies":[{"name":"/Users/lucyknight/odi-grader-sales/package.json","includedInParent":true,"mtime":1649847102319},{"name":"/Users/lucyknight/odi-grader-sales/node_modules/similarity/package.json","includedInParent":true,"mtime":1648635396974},{"name":"levenshtein-edit-distance","loc":{"line":3,"column":26,"index":40},"parent":"/Users/lucyknight/odi-grader-sales/node_modules/similarity/index.js","resolved":"/Users/lucyknight/odi-grader-sales/node_modules/levenshtein-edit-distance/index.js"}],"generated":{"js":"'use strict'\n\nvar levenshtein = require('levenshtein-edit-distance')\n\nmodule.exports = similarity\n\nfunction similarity(a, b, options) {\n  var left = a || ''\n  var right = b || ''\n  var insensitive = !(options || {}).sensitive\n  var longest = Math.max(left.length, right.length)\n\n  return longest === 0\n    ? 1\n    : (longest - levenshtein(left, right, insensitive)) / longest\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/similarity/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/similarity/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/similarity/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/similarity/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/similarity/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/similarity/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/similarity/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/similarity/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/similarity/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/similarity/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/similarity/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/similarity/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/similarity/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/similarity/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/similarity/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/similarity/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/similarity/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}}],"sources":{"node_modules/similarity/index.js":"'use strict'\n\nvar levenshtein = require('levenshtein-edit-distance')\n\nmodule.exports = similarity\n\nfunction similarity(a, b, options) {\n  var left = a || ''\n  var right = b || ''\n  var insensitive = !(options || {}).sensitive\n  var longest = Math.max(left.length, right.length)\n\n  return longest === 0\n    ? 1\n    : (longest - levenshtein(left, right, insensitive)) / longest\n}\n"},"lineCount":17}},"error":null,"hash":"2ee3336cdf58e26cd5e8ee6093f97468","cacheData":{"env":{}}}