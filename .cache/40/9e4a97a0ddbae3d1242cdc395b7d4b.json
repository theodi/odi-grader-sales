{"id":"node_modules/ajv/dist/vocabularies/jtd/nullable.js","dependencies":[{"name":"/Users/lucyknight/odi-grader-sales/node_modules/ajv/dist/vocabularies/jtd/nullable.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/lucyknight/odi-grader-sales/node_modules/ajv/lib/vocabularies/jtd/nullable.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/lucyknight/odi-grader-sales/package.json","includedInParent":true,"mtime":1649847102319},{"name":"/Users/lucyknight/odi-grader-sales/node_modules/ajv/package.json","includedInParent":true,"mtime":1648635397345},{"name":"../../compile/codegen","loc":{"line":4,"column":26,"index":165},"parent":"/Users/lucyknight/odi-grader-sales/node_modules/ajv/dist/vocabularies/jtd/nullable.js","resolved":"/Users/lucyknight/odi-grader-sales/node_modules/ajv/dist/compile/codegen/index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkNullableObject = exports.checkNullable = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nfunction checkNullable({ gen, data, parentSchema }, cond = codegen_1.nil) {\n    const valid = gen.name(\"valid\");\n    if (parentSchema.nullable) {\n        gen.let(valid, (0, codegen_1._) `${data} === null`);\n        cond = (0, codegen_1.not)(valid);\n    }\n    else {\n        gen.let(valid, false);\n    }\n    return [valid, cond];\n}\nexports.checkNullable = checkNullable;\nfunction checkNullableObject(cxt, cond) {\n    const [valid, cond_] = checkNullable(cxt, cond);\n    return [valid, (0, codegen_1._) `${cond_} && typeof ${cxt.data} == \"object\" && !Array.isArray(${cxt.data})`];\n}\nexports.checkNullableObject = checkNullableObject;\n"},"sourceMaps":{"js":{"version":3,"file":"nullable.js","sourceRoot":"","sources":["../../../lib/vocabularies/jtd/nullable.ts"],"names":[],"mappings":";;;AACA,mDAA6D;AAE7D,SAAgB,aAAa,CAC3B,EAAC,GAAG,EAAE,IAAI,EAAE,YAAY,EAAa,EACrC,OAAa,aAAG;IAEhB,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;IAC/B,IAAI,YAAY,CAAC,QAAQ,EAAE;QACzB,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,IAAA,WAAC,EAAA,GAAG,IAAI,WAAW,CAAC,CAAA;QACnC,IAAI,GAAG,IAAA,aAAG,EAAC,KAAK,CAAC,CAAA;KAClB;SAAM;QACL,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA;KACtB;IACD,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA;AACtB,CAAC;AAZD,sCAYC;AAED,SAAgB,mBAAmB,CAAC,GAAe,EAAE,IAAU;IAC7D,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,aAAa,CAAC,GAAG,EAAE,IAAI,CAAC,CAAA;IAC/C,OAAO,CAAC,KAAK,EAAE,IAAA,WAAC,EAAA,GAAG,KAAK,cAAc,GAAG,CAAC,IAAI,kCAAkC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAA;AAC9F,CAAC;AAHD,kDAGC","sourcesContent":["import type {KeywordCxt} from \"../../compile/validate\"\nimport {_, not, nil, Code, Name} from \"../../compile/codegen\"\n\nexport function checkNullable(\n  {gen, data, parentSchema}: KeywordCxt,\n  cond: Code = nil\n): [Name, Code] {\n  const valid = gen.name(\"valid\")\n  if (parentSchema.nullable) {\n    gen.let(valid, _`${data} === null`)\n    cond = not(valid)\n  } else {\n    gen.let(valid, false)\n  }\n  return [valid, cond]\n}\n\nexport function checkNullableObject(cxt: KeywordCxt, cond: Code): [Name, Code] {\n  const [valid, cond_] = checkNullable(cxt, cond)\n  return [valid, _`${cond_} && typeof ${cxt.data} == \"object\" && !Array.isArray(${cxt.data})`]\n}\n"]}},"error":null,"hash":"0372b7f2edca8bc1d5520f7bd691093d","cacheData":{"env":{}}}